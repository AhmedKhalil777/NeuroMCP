name: Publish NuGet Packages

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed for version determination
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
          
      - name: Determine version from tag
        id: get_version
        run: |
          TAG=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$TAG" >> $GITHUB_ENV
          echo "Determined version: $TAG"
      
      # Build and pack SQL Server package
      - name: Build and Pack SQL Server Package
        run: |
          dotnet build NeuroMCP.SqlServer/NeuroMCP.SqlServer.csproj -c Release -p:Version=${{ env.VERSION }}
          dotnet pack NeuroMCP.SqlServer/NeuroMCP.SqlServer.csproj -c Release --no-build -p:Version=${{ env.VERSION }} -o packages
      
      # Build and pack Azure DevOps package
      - name: Build and Pack Azure DevOps Package
        run: |
          dotnet build NeuroMCP.AzureDevOps/NeuroMCP.AzureDevOps.csproj -c Release -p:Version=${{ env.VERSION }}
          dotnet pack NeuroMCP.AzureDevOps/NeuroMCP.AzureDevOps.csproj -c Release --no-build -p:Version=${{ env.VERSION }} -o packages
      
      # Publish all packages
      - name: Publish packages to NuGet
        run: |
          for pkg in packages/*.nupkg; do
            echo "Publishing package: $pkg"
            dotnet nuget push "$pkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
          done
      
      # Create a GitHub release with the packages
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./packages/*.nupkg
          name: Release v${{ env.VERSION }}
          body: |
            # NeuroMCP v${{ env.VERSION }}
            
            This release includes:
            
            - NeuroMCP.SqlServer v${{ env.VERSION }}
            - NeuroMCP.AzureDevOps v${{ env.VERSION }}
            
            ## Installation
            
            ```bash
            # SQL Server package
            dotnet tool install --global NeuroMCP.SqlServer --version ${{ env.VERSION }}
            
            # Azure DevOps package
            dotnet tool install --global NeuroMCP.AzureDevOps --version ${{ env.VERSION }}
            ``` 