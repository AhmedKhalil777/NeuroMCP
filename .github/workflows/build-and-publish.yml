name: Build and Publish NuGet Package

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual trigger

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: MCP.SqlServer

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for proper versioning
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Determine version
      id: determine_version
      run: |
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          # For tags, use the tag name without the 'v' prefix
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          # For branches, use a version based on date and commit count
          COMMIT_COUNT=$(git rev-list --count HEAD)
          DATE=$(date '+%Y%m%d')
          VERSION="1.0.0-dev.$DATE.$COMMIT_COUNT"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Determined version: $VERSION"
    
    - name: Update version in project
      run: |
        chmod +x ./Scripts/update-version.sh
        ./Scripts/update-version.sh ${{ env.VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal
      
    - name: Pack
      run: dotnet pack --configuration Release --no-build --output ./nupkg
      
    - name: Upload NuGet package as artifact
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package
        path: MCP.SqlServer/nupkg/*.nupkg

  publish:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed for creating releases
      
    steps:
    - name: Download NuGet package
      uses: actions/download-artifact@v4
      with:
        name: nuget-package
        path: ./nupkg
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Publish to NuGet
      run: dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
      
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./nupkg/*.nupkg
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 